{"version":3,"file":"donut-chart.js","sourceRoot":"","sources":["../../../../../../../src/components/donut-chart/donut-chart.ts"],"names":["DonutChart","DonutChart.constructor","DonutChart.value","DonutChart.setup","DonutChart.setInner","DonutChart.setupListeners","DonutChart.draw","DonutChart.calcOffset","DonutChart.calcStartPoint","DonutChart.calcSwitchPoint","DonutChart.calcEndPoint","DonutChart.setColor","DonutChart.setSize","DonutChart.updateSize","DonutChart.destroy","DonutChart.debounce"],"mappings":"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","sourcesContent":["const INNER_COLOR: string = '#ffffff';\r\nconst GLOBAL_ALPHA_OPACITY: number = 0.2;\r\n\r\n/**\r\n * @class DonutChart\r\n * Creates a donut chart.\r\n */\r\nexport class DonutChart{\r\n\r\n    private _value: number = 0;\r\n    private color: string;\r\n    private canvas: HTMLCanvasElement;\r\n    private ctx: CanvasRenderingContext2D;\r\n    private xCoord: number;\r\n    private yCoord: number;\r\n    private radius: number;\r\n    private arcWidth: number;\r\n\r\n    constructor(private element:HTMLElement) {\r\n        if (element) {\r\n            this.setup();\r\n            this.setupListeners();\r\n        } else {\r\n            throw new Error('No element provided');\r\n        }\r\n    }\r\n\r\n    set value(value: number) {\r\n        if (value <= 100 && value >= 0) {\r\n            this._value = value;\r\n        } else {\r\n            throw new Error('Value should be a percentage and therefore between (and including) 0 and 100');\r\n        }\r\n    }\r\n\r\n    get value(): number {\r\n        return this._value;\r\n    }\r\n\r\n    private setup(): void {\r\n        this.canvas = this.element.getElementsByTagName('canvas')[0];\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        this.setColor();\r\n        this.setSize();\r\n        this.setInner();\r\n    }\r\n\r\n    private setInner(): void {\r\n        const innerDiv: HTMLElement = this.element.getElementsByClassName('donut-chart__inner')[0] as HTMLElement;\r\n\r\n        if (innerDiv) {\r\n            const innerRadius: number = (2 * this.radius) - this.arcWidth;\r\n            // inner div should be the biggest square that could fit inside the inner radius of the chart.\r\n            const innerSize: number = Math.sqrt(Math.pow(innerRadius, 2) / 2);\r\n            innerDiv.style.width = `${innerSize}px`;\r\n            innerDiv.style.height = `${innerSize}px`;\r\n        } else {\r\n            throw new Error('No element with class \"donut-chart__inner\" found');\r\n        }\r\n    }\r\n\r\n    private setupListeners(): void {\r\n        window.addEventListener('resize', this.debounce(() => this.updateSize(), 250));\r\n    }\r\n\r\n    /**\r\n     * draws the donut chart.\r\n     */\r\n    public draw(): void {\r\n        const offset: number = this.calcOffset() ;\r\n        const switchPoint: number =  this.calcSwitchPoint(offset);\r\n        const startPoint: number = this.calcStartPoint(offset);\r\n        const endPoint: number = this.calcEndPoint(offset);\r\n\r\n        // fill chart until given value.\r\n        this.ctx.beginPath();\r\n        this.ctx.lineWidth = this.arcWidth;\r\n        this.ctx.arc(this.xCoord, this.yCoord, this.radius, startPoint, switchPoint);\r\n        this.ctx.strokeStyle = this.color;\r\n        this.ctx.stroke();\r\n\r\n        // fill remaining part of chart.\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(this.xCoord, this.yCoord, this.radius, switchPoint, endPoint);\r\n        this.ctx.strokeStyle = this.color;\r\n        this.ctx.globalAlpha = GLOBAL_ALPHA_OPACITY;\r\n        this.ctx.stroke();\r\n\r\n        // fill center. Otherwise it is a pie, not a donut.\r\n        this.ctx.beginPath();\r\n        this.ctx.fillStyle = INNER_COLOR;\r\n        this.ctx.fill();\r\n    }\r\n\r\n    private calcOffset(): number {\r\n        return -Math.PI * 0.5;\r\n    }\r\n\r\n    private calcStartPoint(offset: number): number {\r\n        return 0 + offset;\r\n    }\r\n\r\n    private calcSwitchPoint(offset: number): number {\r\n        return ((this._value / 100 ) * (Math.PI * 2)) + offset;\r\n    }\r\n\r\n    private calcEndPoint(offset: number): number {\r\n        return (Math.PI * 2) + offset;\r\n    }\r\n\r\n    private setColor(): void {\r\n        const styles: CSSStyleDeclaration = window.getComputedStyle(this.element);\r\n\r\n        this.color = styles.color;\r\n    }\r\n\r\n    private setSize(): void {\r\n        const size: number = this.canvas.clientWidth;\r\n        const dpi: number = window.devicePixelRatio;\r\n        this.canvas.style.height = `${size}px`;\r\n        this.canvas.height = size * dpi;\r\n        this.canvas.width = size * dpi;\r\n        this.yCoord = (size * dpi) / 2;\r\n        this.xCoord = (size * dpi) / 2;\r\n        this.arcWidth = 0.1 * (size * dpi);\r\n        this.radius = ((size * dpi) / 2) - this.arcWidth;\r\n    }\r\n\r\n    private updateSize(): void {\r\n        this.setSize();\r\n        this.setInner();\r\n        this.draw();\r\n    }\r\n\r\n    public destroy(): void {\r\n        window.removeEventListener('resize', this.debounce(() => this.updateSize(), 250));\r\n    }\r\n\r\n    private debounce(func: Function, timeout: number): EventListenerOrEventListenerObject {\r\n        let timer: number;\r\n\r\n        return (...args: any[]) => {\r\n            window.clearTimeout(timer);\r\n            timer = window.setTimeout(() => { func(...args); }, timeout);\r\n        };\r\n    }\r\n}\r\n"]}