{"version":3,"file":"filterlist.js","sourceRoot":"","sources":["../../../../../../../src/components/list/filterlist.ts"],"names":["FilterList","FilterList.constructor","FilterList.createElements","FilterList.buildElement","FilterList.addClickListener","FilterList.delete","FilterList.deleteAll","FilterList.createEvent","FilterList.handleEvent","FilterList.destroy"],"mappings":"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","sourcesContent":["const FILTER_BUTTON_TEMPLATE: string = `<button class=\"list--filter-button\">\r\n    <i class=\"icon icon-cross\"></i>\r\n</button>`;\r\n\r\n/**\r\n * @class FilterList\r\n */\r\nexport class FilterList {\r\n\r\n    constructor(private host: Element, private elements: Array<any>) {\r\n        if (host  && host.nodeName === 'UL') {\r\n            this.createElements();\r\n        } else {\r\n            throw new Error('There is no correct host element specified');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Scaffolding\r\n     */\r\n    private createElements(): void {\r\n        for (let i: number = 0, j: number = this.elements.length; i < j; i += 1) {\r\n            const value: string = this.elements[i].value;\r\n            const id: string = this.elements[i].id;\r\n            const element: HTMLElement = this.buildElement(value, id);\r\n\r\n            this.host.appendChild(element);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Build the filter element\r\n     * @param value the value of the filter element\r\n     * @param id the id of the filter element\r\n     */\r\n    private buildElement(value: string, id: string): HTMLElement {\r\n        let el: HTMLElement = document.createElement('li');\r\n        el.innerHTML = value + FILTER_BUTTON_TEMPLATE;\r\n        el.id = id;\r\n        el.tabIndex = 0;\r\n        el = this.addClickListener(el);\r\n\r\n        return el;\r\n    }\r\n\r\n    /**\r\n     * Add a listener to the delete button of the filter element\r\n     * @param el the filter element which button needs a delete listener\r\n     */\r\n    private addClickListener(el: HTMLElement): HTMLElement {\r\n        const button: HTMLElement = el.querySelector('.list--filter-button') as HTMLElement;\r\n        button.addEventListener('click', this);\r\n\r\n        return el;\r\n    }\r\n\r\n    /**\r\n     * Delete a single filter element\r\n     * @param el the element that needs deleting.\r\n     * @fires 'filterlist-deleted-item'\r\n     */\r\n    delete(child: HTMLElement): void {\r\n        this.host.removeChild(child);\r\n        const event: any = this.createEvent('filterlist-deleted-item');\r\n        event.data = {id: child.id};\r\n        this.host.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Delete all filter elements\r\n     * @fires 'filterlist-deleted'\r\n     */\r\n    deleteAll(): void {\r\n        const node: Element = this.host;\r\n\r\n        while (node.firstChild) {\r\n            node.removeChild(node.firstChild);\r\n        }\r\n\r\n        if (!node.firstChild) {\r\n            const event: any = this.createEvent('filterlist-deleted');\r\n            this.host.dispatchEvent(event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates an event\r\n     * @param type the type of the event\r\n     */\r\n    private createEvent(type: string, bubble: boolean = true, cancelable: boolean = true): Event {\r\n        const event: any = document.createEvent('CustomEvent');\r\n        event.initEvent(type, bubble, cancelable);\r\n\r\n        return event;\r\n    }\r\n\r\n    /**\r\n     * Handle events for event listeners\r\n     * @param event the event\r\n     */\r\n    handleEvent(event: Event): void {\r\n        const target: HTMLElement = event.currentTarget as HTMLElement;\r\n\r\n        if (target.classList.contains('list--filter-button')) {\r\n            this.delete(target.parentElement);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove listeners and filter elements\r\n     */\r\n    destroy(): void {\r\n        this.deleteAll();\r\n    }\r\n}\r\n"]}