{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../../../src/core/utils.ts"],"names":["Utils","Utils.constructor","Utils.GenerateUID","Utils.GenerateUID.s4","Utils.FindParentContainingClass","Utils.IsDescendant","Utils.CalculateElementHeight","Utils.CreateNode","Utils.CamelCase","Utils.IsKeyPressed","Utils.FocusChild"],"mappings":"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","sourcesContent":["export class Utils {\r\n\r\n    /**\r\n     * Generates an unique identifier\r\n     * @return {string}\r\n     * @constructor\r\n     */\r\n    static GenerateUID(): string {\r\n        function s4(): string {\r\n            return Math.floor((1 + Math.random()) * 0x10000)\r\n                .toString(16)\r\n                .substring(1);\r\n        }\r\n\r\n        return `uno-${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\r\n    }\r\n\r\n    /**\r\n     * Traverses the dom tree up to find the element containing className\r\n     * @param child\r\n     * @param className The className to find\r\n     * @param root If root is reached while traversing, searching stops and null is returned\r\n     * @return {any}\r\n     */\r\n    static FindParentContainingClass(child: Element, className: string, root: Element): Element {\r\n        while (child !== root) {\r\n            if (child.classList.contains(className)) {\r\n                return child;\r\n            }\r\n            child = child.parentElement;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static IsDescendant(child: Element, parent: Element): boolean {\r\n        let node: Node = child.parentNode;\r\n        while (node !== null) {\r\n            if (node === parent) {\r\n                return true;\r\n            }\r\n            node = node.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Calculates the total height of an element, combining height & margin\r\n     * @param element\r\n     * @return {number}\r\n     */\r\n    static CalculateElementHeight(element: Element): number {\r\n        let height: number = 0;\r\n\r\n        if (element) {\r\n            let styles: CSSStyleDeclaration = getComputedStyle(element);\r\n            height += parseInt(styles.height);\r\n            height += parseInt(styles.marginTop);\r\n            height += parseInt(styles.marginBottom);\r\n        }\r\n\r\n        return height;\r\n    }\r\n\r\n    static CreateNode(html: string): HTMLElement {\r\n        return new DOMParser().parseFromString(html, 'text/html').body.firstChild as HTMLElement;\r\n    }\r\n\r\n    /**\r\n     * Turns a string-like-this into a StringLikeThis\r\n     * @param {string} string\r\n     * @return {string}\r\n     * @constructor\r\n     */\r\n    static CamelCase(dashed: string): string {\r\n        return dashed.split('-').map((item: string) => item.substring(0, 1).toUpperCase() + item.substring(1).toLowerCase()).join('');\r\n    }\r\n\r\n    /**\r\n     * Checks if a certain key is pressed, converts keynames to browser specific names.\r\n     * For instance, the 'ArrowDown' key in Chrome is called 'ArrowDown', in IE it's called 'Down'\r\n     * @param event The original event\r\n     * @param key The name of the key, as specified in the docs (https://developer.mozilla.org/nl/docs/Web/API/KeyboardEvent/key/Key_Values)\r\n     * @constructor\r\n     */\r\n    static IsKeyPressed(event: KeyboardEvent, key: string): boolean {\r\n        const ambiguous: any = {\r\n            ' ': ['Space', 'Spacebar', 'Space Bar'],\r\n            'ArrowDown': ['Down'],\r\n            'ArrowLeft': ['Left'],\r\n            'ArrowRight': ['Right'],\r\n            'ArrowUp': ['Up'],\r\n            'ContextMenu': ['Apps'],\r\n            'CrSel': ['Crsel'],\r\n            'Delete': ['Del'],\r\n            'Escape': ['Esc'],\r\n            'ExSel': ['Exsel']\r\n        };\r\n\r\n        if (event.key === key) {\r\n            return true;\r\n        }\r\n\r\n        if (ambiguous.hasOwnProperty(key)) {\r\n            return ambiguous[key].reduce(\r\n                (pressed: boolean, alt: string) => {\r\n                    pressed = pressed || event.key === alt;\r\n                    return pressed;\r\n                },\r\n                false);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Focuses the next item in the nodeList (or previous with shift-modifier)\r\n     * @param event the keyboard event\r\n     * @param nodeList the collection of focusable items\r\n     */\r\n    static FocusChild(event: KeyboardEvent, nodeList: NodeList): void {\r\n        // get list of focusable items\r\n        let focusableItems: Array<HTMLElement>;\r\n        // convert Nodelist to Array using array prototype\r\n        focusableItems = Array.prototype.slice.call(nodeList, 0);\r\n\r\n        // sort according to tabindex\r\n        focusableItems.sort(function (a: HTMLElement, b: HTMLElement): number {\r\n            let aInd: String = a.getAttribute('tabindex');\r\n            let bInd: String = b.getAttribute('tabindex');\r\n            if (aInd > bInd) {\r\n                return 1;\r\n            } else if (aInd < bInd) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        // get currently focused item\r\n        let focusedItem: HTMLElement;\r\n        focusedItem = document.querySelector(':focus') as HTMLElement;\r\n\r\n        // get the number of focusable items\r\n        let numberOfFocusableItems: number;\r\n        numberOfFocusableItems = focusableItems.length;\r\n\r\n        // get the index of the currently focused item\r\n        let focusedItemIndex: number;\r\n        focusedItemIndex = Array.prototype.indexOf.call(focusableItems, focusedItem);\r\n\r\n        if (event.shiftKey) {\r\n            // back tab\r\n            // if focused on first item and user preses back-tab, go to the last focusable item\r\n            if (focusedItemIndex === 0) {\r\n                focusableItems[numberOfFocusableItems - 1].focus();\r\n                event.preventDefault();\r\n            } else {\r\n                focusableItems[focusedItemIndex - 1].focus();\r\n                event.preventDefault();\r\n            }\r\n\r\n        } else {\r\n            // forward tab\r\n            // if focused on the last item and user preses tab, go to the first focusable item\r\n            if (focusedItemIndex === numberOfFocusableItems - 1) {\r\n                focusableItems[0].focus();\r\n                event.preventDefault();\r\n            } else {\r\n                focusableItems[focusedItemIndex + 1].focus();\r\n                event.preventDefault();\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}